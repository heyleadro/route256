// Code generated by mockery v2.30.1. DO NOT EDIT.

package checkout

import (
	context "context"
	model "route256/checkout/internal/model"

	mock "github.com/stretchr/testify/mock"
)

// MockOrderCreator is an autogenerated mock type for the OrderCreator type
type MockOrderCreator struct {
	mock.Mock
}

// Purchase provides a mock function with given fields: ctx, user, items
func (_m *MockOrderCreator) Purchase(ctx context.Context, user int64, items []model.Cart) (int64, error) {
	ret := _m.Called(ctx, user, items)

	var r0 int64
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, int64, []model.Cart) (int64, error)); ok {
		return rf(ctx, user, items)
	}
	if rf, ok := ret.Get(0).(func(context.Context, int64, []model.Cart) int64); ok {
		r0 = rf(ctx, user, items)
	} else {
		r0 = ret.Get(0).(int64)
	}

	if rf, ok := ret.Get(1).(func(context.Context, int64, []model.Cart) error); ok {
		r1 = rf(ctx, user, items)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// NewMockOrderCreator creates a new instance of MockOrderCreator. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMockOrderCreator(t interface {
	mock.TestingT
	Cleanup(func())
}) *MockOrderCreator {
	mock := &MockOrderCreator{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
