version: "3.3"

services:
  notifications:
    image: notifications
    build: ./notifications/
    ports:
      - "8082:8082"
      - "50053:50053"
    depends_on:
      kafka1:
        condition: service_healthy
      kafka2:
        condition: service_healthy
      kafka3:
        condition: service_healthy

  checkout:
    image: checkout
    build: ./checkout/
    ports:
      - "8080:8080"
      - "50051:50051"
    depends_on:
      - checkout-db


  loms:
    image: loms
    build: ./loms/
    ports:
      - "8081:8081"
      - "50052:50052"
    depends_on:
      loms-db:
        condition: service_healthy
      kafka1:
        condition: service_healthy
      kafka2:
        condition: service_healthy
      kafka3:
        condition: service_healthy

  checkout-db:
    image: postgres:15.1
    environment:
      POSTGRES_DB: checkout
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      PGDATA: "/var/lib/postgresql/data/pgdata"
      PGPORT: 5432
    container_name: 'checkout-postgres-container'
    volumes:
      - .:/var/lib/postgresql/data/checkout
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U user -d checkout"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 1G


  loms-db:
    image: postgres:15.1
    environment:
      POSTGRES_DB: loms
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      PGDATA: "/var/lib/postgresql/data/pgdata"
      PGPORT: 5433
    container_name: 'loms-postgres-container'
    volumes:
      - .:/var/lib/postgresql/data/loms
    ports:
      - "5433:5433"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U user -d loms"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 1G
  
  jaeger:
    image: jaegertracing/all-in-one
    ports:
      - 5775:5775/udp
      - 6831:6831/udp
      - 6832:6832/udp
      - 5778:5778
      - 16686:16686 # web
      - 14268:14268
      - 9411:9411

  prometheus:
    image: prom/prometheus
    ports:
      - 9090:9090
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - ./alerts.yml:/etc/prometheus/alerts.yml
    extra_hosts:
      - host.docker.internal:host-gateway
  grafana:
    image: grafana/grafana-oss
    ports:
      - 3000:3000
    volumes:
      - ./data:/var/lib/grafana
    links:
      - prometheus


